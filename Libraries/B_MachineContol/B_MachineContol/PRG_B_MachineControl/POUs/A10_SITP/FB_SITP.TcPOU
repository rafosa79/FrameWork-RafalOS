<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_SITP" Id="{5b51a288-700e-4a3b-a45e-bfa480d9eda1}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'call_after_init'}
(*			
	EVERDE sp. z o.o.
	Rafał Osajda		24.02.2025		TC 4026.13		wer. 0.0.0.1
	Obsługa stanów i tróbów pracy - przełączanie pomioędzy, liczenie czasu w danych stanie, 
*)
FUNCTION_BLOCK FB_SITP EXTENDS B_Baza.FB_PodzespolBazowy IMPLEMENTS B_Baza.ITF_SITP
VAR
	stSITP						: ST_SITP;				//wszystkie zmienne modułu zamknięte w ST bo potem będzie z tego ST dziedziczone i żeby było pogrupowane
	stSITPDaneElementu			: ST_SITP_DaneElementu;	//dane dla stanów./ trybów przy sprawdzaniu czy jest możliwa zmiana
(*	SAFETY	*)
	refstSafety					: REFERENCE TO ST_Safety; 
(*	Podzespoly bazowe	*)
	arrPB						: ARRAY [0..B_Baza.STALE.MAX_ILOSC_PB] OF B_Baza.ITF_PodzespolBazowy;
	iIloscPB					: INT := -1;
	uiIloscElementow			: UINT;		//liczba elementow które są na maszynie 
(*	Loger bledow		*)
	fbLoger						: B_Baza.FB_Loger;
END_VAR
VAR PERSISTENT
	tCzas						: LTIME;	//całkowity czas pracy
	fbCzas						: B_Baza.FB_Czas;
	fbLokalizacja				: B_Baza.FB_Lokalizacja;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[


	(*	Obsługa SITP	*)
IF (NOT THIS^.stSITP.bStanZmiana AND NOT THIS^.stSITP.bTrybZmiana) THEN
	THIS^.stSITPDaneElementu.arrStanyWlaczoneWTrybie						:= THIS^.stSITP.arrStanyWlaczoneWTrybie [THIS^.stSITP.eTryb];
	THIS^.stSITPDaneElementu.arrMozliwoscPrzejsciaPamiedzyTrybamiWStanie	:= THIS^.stSITP.arrMozliwoscPrzejsciaPamiedzyTrybamiWStanie [THIS^.stSITP.eStan];
	
	IF (THIS^.TestCzyAktynePolecenieZmianyTrybu ()) THEN
		THIS^.stSITP.bTrybZmiana		:= THIS^.stSITP.arrTryby [THIS^.stSITP.eTryb].ZwrocCzyMoznaWyjscZeStanu ();		(*	jest aktywne polecenie wywołaj dla aktywnego trybu czy jest możliwość przejscia do nowego trybu	*) 
	ELSIF (THIS^.TestCzyAktynePolecenieZmianyStanu () OR THIS^.stSITP.bWyjdzZestanuAktywnego) THEN
		THIS^.stSITP.bStanZmiana		:= THIS^.stSITP.refarrStany [THIS^.stSITP.eStan].ZwrocCzyMoznaWyjscZeStanu ();	(*	jest aktywne polecenie wywołaj dla aktywnego stanu test czy jest możliwa zmana stanu tym pleceniem	*)
		THIS^.stSITP.bWyjdzZestanuAktywnego									:= FALSE;
	ELSE
		(*	Aktualizacja czasu pracy w stanie i trybie	*)
		THIS^.AktualizacjaLicznikowCzasu ();
		(*	Obsluga stanu	*)
		THIS^.ObslugaPracyWStanie ();
		(* Obsługa stanów aktywnych	- z końcówką ING	*)
	//	THIS^.ObslugaStanowAktywnych ();
		(* Obsługa stanów oczekujących *)
	//	THIS^.ObslugaStanowOczekujacych ();
	END_IF
	
ELSIF (THIS^.stSITP.bTrybZmiana) THEN
	THIS^.stSITP.bBylaZmianaTrybu			:= TRUE;	//informacje dla HMI

	THIS^.WylaczSygnalizacjeStanow ();
	(* wyłączenie aktywnego trybu	*)
	THIS^.stSITP.arrTryby [THIS^.stSITP.eTryb].ustawAktywny (bIN	:= FALSE);
	(* wyłączenie aktywnego stanu w poprzednim trybie	*)
	THIS^.stSITP.refarrStany [THIS^.stSITP.eStan].ustawAktywny (bIN	:= FALSE);
	THIS^.stSITP.eTryb						:= THIS^.stSITPDaneElementu.eNowyTryb;
	(* włączenie aktywnego trybu	*)
	THIS^.stSITP.arrTryby [THIS^.stSITP.eTryb].ustawAktywny (bIN	:= TRUE);
	THIS^.stSITP.refarrStany				REF= THIS^.stSITP.arrStanyWszystkichTrybow [THIS^.stSITP.eTryb];
	(* włączenie aktywnego stanu w nowym trybie 		*)
	THIS^.stSITP.refarrStany [THIS^.stSITP.eStan].ustawAktywny (bIN	:= TRUE);
	THIS^.WlaczSygnalizacjeStanow ();
	THIS^.stSITP.bTrybZmiana				:= FALSE;
	
ELSIF (THIS^.stSITP.bStanZmiana) THEN
	THIS^.WylaczSygnalizacjeStanow ();
	THIS^.stSITP.refarrStany [THIS^.stSITP.eStan].ustawAktywny (bIN	:= FALSE);
	THIS^.stSITP.eStan						:= THIS^.stSITPDaneElementu.eNowyStan;
	THIS^.stSITP.refarrStany [THIS^.stSITP.eStan].ustawAktywny (bIN	:= TRUE);
	THIS^.WlaczSygnalizacjeStanow ();
	THIS^.stSITP.bStanZmiana				:= FALSE;
END_IF	]]></ST>
    </Implementation>
    <Folder Name="ITF_SPM_HMI_Lacznik" Id="{3092d94e-1880-0c6c-12b2-4b411dc435ce}" />
    <Method Name="ZwrocNazweStanu" Id="{f82c1a03-0d5d-0ebd-04db-bc14eb1542f6}" FolderPath="ITF_SPM_HMI_Lacznik\">
      <Declaration><![CDATA[METHOD ZwrocNazweStanu : WSTRING
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ZwrocNazweStanu			:= this^.stSITP.refarrStany [this^.stSITP.eStan].ZwrocNazwe ();]]></ST>
      </Implementation>
    </Method>
    <Method Name="ZwrocNazweTrybu" Id="{6b125101-63ed-09b5-280a-53fe7610c020}" FolderPath="ITF_SPM_HMI_Lacznik\">
      <Declaration><![CDATA[METHOD ZwrocNazweTrybu : WSTRING
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ZwrocNazweTrybu			:= THIS^.stSITP.arrTryby [THIS^.stSITP.eTryb].ZwrocNazwe ();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>