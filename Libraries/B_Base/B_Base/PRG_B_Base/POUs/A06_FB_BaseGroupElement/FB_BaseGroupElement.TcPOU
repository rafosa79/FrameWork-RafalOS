<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_BaseGroupElement" Id="{1f8518b0-2e03-0c13-2a4a-ffc3b6f9b887}" SpecialFunc="None">
    <Declaration><![CDATA[(*			
	RAFALOS
	Rafał Osajda		19.09.2025		TC 4024.66
	FB Bazowy dla wszystkich elementów złożonych
*)
FUNCTION_BLOCK FB_BaseGroupElement EXTENDS FB_BaseControlElement IMPLEMENTS ITF_BaseGroupElement, ITF_BaseGroupElement_HMI_Connector
VAR
	arrControlElement			: ARRAY [1..GVL_BaseConstans.MAX_ITEM_PER_ELEMENT] OF ITF_BaseControlElement;
	uiNumberOfControlElement	: UINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Events" Id="{20f6f417-5dd7-052c-022d-8978faa14be3}" />
    <Folder Name="ID" Id="{9d43db93-a825-0ef2-1289-7c7210b94e63}" />
    <Folder Name="WiazanieZmiennych" Id="{2b50b030-a9ec-06ce-1ddf-f0356b93fad0}" />
    <Method Name="AddControlElement" Id="{175b37ba-638b-0727-26cf-573800512486}">
      <Declaration><![CDATA[METHOD PROTECTED AddControlElement : BOOL
VAR_INPUT
	itfControlElement		: ITF_BaseControlElement;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (THIS^.uiNumberOfControlElement + 1 <= GVL_BaseConstans.MAX_ITEM_PER_ELEMENT) THEN
	THIS^.uiNumberOfControlElement		:= THIS^.uiNumberOfControlElement + 1;
	THIS^.arrControlElement [THIS^.uiNumberOfControlElement]	:= itfControlElement;
	AddControlElement			:= TRUE;
ELSE
	;//zwrocenie zbyt dużo komponentow
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteEveryCycle_Error" Id="{27999fb5-d889-03ba-3e6e-c89cb8983a76}">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		27.03.2025		TC 4024.66
	Obsluga bledow sprawdzanie czy jakis blad sie nei pojawil i ustawienie stanu lub wylaczenie
*)
METHOD PUBLIC ExecuteEveryCycle_Error
VAR
	iI					: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.ExecuteEveryCycle_Error ();

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfComponents) DO
	THIS^.arrComponent [iI].ExecuteEveryCycle_Test ();
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteEveryCycle_Operation" Id="{9b6c22a1-ff3d-0cb3-36d0-b2883b8e1ec9}">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		27.03.2025		TC 4024.66
	Wywolanie co cykl operacji 
*)
METHOD PUBLIC ExecuteEveryCycle_Operation
VAR
	iI				: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.ExecuteEveryCycle_Operation ();

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfComponents) DO
	THIS^.arrComponent [iI].ExecuteEveryCycle_Test ();
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteEveryCycle_Status" Id="{697110ad-2da0-0583-304b-85b1ad08e3bb}">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		27.03.2025		TC 4024.66
	Aktualizacja flag 
*)
METHOD PUBLIC ExecuteEveryCycle_Status
VAR
	iI				: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.ExecuteEveryCycle_Status ();

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfComponents) DO
	THIS^.arrComponent [iI].ExecuteEveryCycle_Test ();
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteEveryCycle_Test" Id="{879f7bc3-0f18-0b43-0dc5-691b7892df40}">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		27.03.2025		TC 4024.66
	Testowanie czy nei pojawil sie jakis rozkaz i uruchomienie odpowiednich operacji
*)
METHOD PUBLIC ExecuteEveryCycle_Test
VAR
	iI			: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.ExecuteEveryCycle_Test ();

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfComponents) DO
	THIS^.arrComponent [iI].ExecuteEveryCycle_Test ();
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{a18f7400-8689-05ae-3b31-59cab5e8ddb8}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.stIdentifier.eType			:= E_BaseElementType.eGroup;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FirstCycle" Id="{fede4491-2815-0c5d-25f3-a52cafaf5311}">
      <Declaration><![CDATA[METHOD PUBLIC FirstCycle : BOOL
VAR_INPUT
END_VAR
VAR
	bResult			: bool;
	iI				: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[bResult				:= SUPER^.FirstCycle ();

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfControlElement) DO
	bResult			:= bResult AND THIS^.arrControlElement [iI].FirstCycle ();
END_FOR

FirstCycle			:= bResult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsValidCommonData" Id="{f68feac5-aff9-07a7-017f-3067903007ab}" FolderPath="WiazanieZmiennych\">
      <Declaration><![CDATA[METHOD PUBLIC IsValidCommonData : BOOL
VAR_INPUT
END_VAR

VAR
	bResult: BOOL;
	iI: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[bResult						:= SUPER^.IsValidCommonData ();

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfControlElement) DO
	bResult					:= bResult AND THIS^.arrControlElement [iI].IsValidCommonData ();
END_FOR

IsValidCommonData			:= bResult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="JoinTheLogger" Id="{63b62d03-fe40-084c-0b22-a3d0bbf0b2bf}">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		07.10.2025		TC 4024.66
	Dodpisywanie się do listy logera
*)
METHOD PUBLIC JoinTheLogger : BOOL
VAR_INPUT
END_VAR

VAR
	bResult: BOOL;
	iI: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[bResult			:= SUPER^.JoinTheLogger ();

FOR iI := 1 TO  TO_INT (THIS^.uiNumberOfControlElement) DO
	bResult 	:= bResult AND THIS^.arrControlElement [iI].JoinTheLogger ();
END_FOR

JoinTheLogger	:= bResult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="LinkCommonData" Id="{163c9121-a3cf-0bfe-2517-ea6f42e3be4a}" FolderPath="WiazanieZmiennych\">
      <Declaration><![CDATA[METHOD PUBLIC LinkCommonData : BOOL
VAR_INPUT
	stCommonData				: REFERENCE TO ST_BaseCommonData;
END_VAR
VAR
	bResult						: BOOL;
	iI: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[bResult							:= SUPER^.LinkCommonData (stCommonData := stCommonData);

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfControlElement) DO
	bResult := bResult AND THIS^.arrControlElement [iI].LinkCommonData (stCommonData := stCommonData);
END_FOR

LinkCommonData					:= bResult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="LinkSS1" Id="{76e517ec-0eff-075d-0625-cf0f5460cacb}" FolderPath="WiazanieZmiennych\">
      <Declaration><![CDATA[METHOD PUBLIC LinkSS1 : BOOL
VAR_INPUT
	fbSS1			: ITF_BaseFlagGet;
END_VAR

VAR
	bresult: BOOL;
	iI: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[bresult				:= SUPER^.LinkSS1 (fbSS1 := fbSS1);

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfControlElement) DO
	bresult			:= bresult AND THIS^.arrControlElement [iI].LinkSS1 (fbSS1	:= fbSS1);
END_FOR

LinkSS1				:= bresult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="LinkSTO" Id="{91e2e203-b610-04e4-1b52-ed4f584923fa}" FolderPath="WiazanieZmiennych\">
      <Declaration><![CDATA[METHOD PUBLIC LinkSTO : BOOL
VAR_INPUT
	fbSTO			: ITF_BaseFlagGet;
END_VAR

VAR
	bresult: BOOL;
	iI: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[bresult				:= SUPER^.LinkSTO (fbSTO := fbSTO);

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfControlElement) DO
	bresult			:= bresult AND THIS^.arrControlElement [iI].LinkSTO (fbSTO	:= fbSTO);
END_FOR

LinkSTO				:= bresult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetCode" Id="{3432e546-4149-00a7-0fb9-e73b7e1c9dbd}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC SetCode
VAR_INPUT
	sCode							: STRING;
	sAdd							: STRING;
END_VAR
VAR
	sItemCode						: STRING;
	iI								: INT;
	sParentCode						: STRING;
	arrSegment						: ARRAY [0..GVL_BaseConstans.MAX_NESTING_LEVEL] OF STRING;
	iDotPosition					: INT;
	iLast							: INT;
	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//sKodRodzica	:=  UtworzKodElementu (sKodRodzica := sKod, sDopisz := TO_STRING (THIS^.zwrocID ()));
SUPER^.SetCode (sCode := sCode, sAdd := sAdd);
sParentCode						:= THIS^.GetCode ();

IF (THIS^.uiNumberOfComponents > 0) THEN
	arrSegment [0]				:= THIS^.arrComponent [THIS^.uiNumberOfComponents].GetCode ();
	FOR iI := 1 TO TO_INT (GVL_BaseConstans.MAX_NESTING_LEVEL) DO
		iDotPosition			:= find (STR1 := arrSegment [0], STR2 := '.');
		IF (iDotPosition = 0) THEN
			arrSegment [iI]	:= arrSegment [0];
			EXIT;
		ELSE
			arrSegment [iI]		:= Tc2_Standard.LEFT (STR := arrSegment [0], SIZE := iDotPosition - 1);
			arrSegment [0]		:= Tc2_Standard.DELETE (STR := arrSegment [0], POS := 1, LEN := iDotPosition);
		END_IF
	END_FOR
	FOR iI := 0 TO TO_INT (GVL_BaseConstans.MAX_NESTING_LEVEL) - 1 DO
		IF (TO_INT (arrSegment [TO_INT (GVL_BaseConstans.MAX_NESTING_LEVEL) - iI]) <> 0 ) THEN
			iLast			:= TO_INT (arrSegment [TO_INT (GVL_BaseConstans.MAX_NESTING_LEVEL) - iI]);
			EXIT;
		END_IF
	END_FOR
END_IF

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfControlElement) DO
//	sKodKomponentu	:= UtworzKodElementu (sKodRodzica := sKod, sDopisz := TO_STRING (iI));
	THIS^.arrControlElement [iI].SetCode (sCode	:= sParentCode, sAdd := TO_STRING (iI + iLast));
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetEventsIDs" Id="{0185e120-5cb8-0dba-3756-ff856ef7df3c}" FolderPath="Events\">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		03.10.2025		TC 4024.66
	nadawanie unikalnych ID dla zdarzeń
*)
METHOD PUBLIC SetEventsIDs : UINT
VAR_INPUT
	uiNewID		: UINT;
END_VAR
VAR
	iI			: INT;
	uiLastID	: UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[uiLastID		:= SUPER^.SetEventsIDs (uiNewID	:= uiNewID);

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfControlElement) DO 
	uiLastID			:= THIS^.arrControlElement [iI].SetEventsIDs (uiNewID	:= uiLastID);
END_FOR
SetEventsIDs				:= uiLastID;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetID" Id="{fea103d8-a0ad-03db-1bf2-3008a70fc842}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC SetID : UINT
VAR_INPUT
	uiID					: UINT;
END_VAR
VAR
	uiLastID				: UINT;
	iI						: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[uiLastID				:= SUPER^.SetID (uiID	:= uiID);

FOR iI := 1 TO TO_INT (THIS^.uiNumberOfControlElement) DO 
	uiLastID			:= THIS^.arrControlElement [iI].SetID (uiID	:= uiLastID + 1);
END_FOR
SetID					:= uiLastID;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>