<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_BaseLoggerElement" Id="{84ce134f-38cc-08bd-3d60-40e507799b32}" SpecialFunc="None">
    <Declaration><![CDATA[(*			
	RAFALOS
	Rafał Osajda		19.09.2025		TC 4024.66
	Element bazowy umożliwiający potomkom wysyłaś zgłoszenia do logera
*)
FUNCTION_BLOCK FB_BaseLoggerElement EXTENDS FB_Base IMPLEMENTS ITF_BaseLoggerElement, ITF_BaseLoggerElement_HMI_Connector, ITF_BaseLogger_Item
VAR
	stIdentifier					: ST_BaseElementIdentifier;	//Identyfikacja elementu
	stEvents						: ST_BaseEvents;			//dane elementu dotyczące zdarzeń
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Events" Id="{0a451ccb-a5c6-0466-1fb3-43b9aac577ff}" />
    <Folder Name="ID" Id="{9f4accde-c200-0e3a-3280-17fd6d107d51}" />
    <Folder Name="ITF_BaseLogger_Item" Id="{dbd5ee07-415c-0f41-0935-285bdd005cb3}" />
    <Folder Name="ITF_BaseLoggerElement_HMI_Connector" Id="{abdbf241-16b7-0948-3bea-83a764b01a75}" />
    <Method Name="AddEvent" Id="{634f9b8e-85a8-02a3-013c-6c409e6a5e93}" FolderPath="Events\">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		24.03.2025		TC 4024.66
	Dodawanie zgłoszenia do systemu
*)
METHOD PUBLIC AddEvent : BOOL
VAR_INPUT
	bIgnoreRepetitions					: BOOL;						//jak true nie zliczaj powtorzeń wystapienia np komunikaty
	eEventCategory						: E_BaseEvents_Category;	//BYTE;	//1 - blad, 2 - ostrzezenie, 3 - wiadomosc, 4 - safety
	bConfirm							: BOOL;						//wymaga powtierdzenia
	stDescription						: ST_BaseLabel;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (THIS^.stEvents.uiNumberOfAdded + 1 <= GVL_BaseConstans.MAX_EVENTS_PER_ITEM) THEN
	THIS^.stEvents.uiNumberOfAdded														:= THIS^.stEvents.uiNumberOfAdded + 1;
	THIS^.stEvents.arrDefinitions [THIS^.stEvents.uiNumberOfAdded].uiIDInItem			:= THIS^.stEvents.uiNumberOfAdded;
	THIS^.stEvents.arrDefinitions [THIS^.stEvents.uiNumberOfAdded].bIgnoreRepetitions	:= bIgnoreRepetitions;
	THIS^.stEvents.arrDefinitions [THIS^.stEvents.uiNumberOfAdded].eEventCategory		:= eEventCategory;
	THIS^.stEvents.arrDefinitions [THIS^.stEvents.uiNumberOfAdded].stDescription		:= stDescription;
	THIS^.stEvents.arrDefinitions [THIS^.stEvents.uiNumberOfAdded].bConfirm				:= bConfirm;
	AddEvent						:= TRUE;
ELSE
	AddEvent						:= FALSE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EventAcknowledge" Id="{97aef371-631d-0164-2cc9-de1694ec8bde}" FolderPath="Events\">
      <Declaration><![CDATA[METHOD PROTECTED EventAcknowledge : BOOL
VAR_INPUT
	iNumber				: INT;
END_VAR
VAR
	sttmpRow			: ST_BaseEvents_RowInQueue;
	btmpExit			: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (iNumber > 0 AND iNumber <= TO_INT (THIS^.stEvents.uiNumberOfAdded)) THEN
	IF ((THIS^.stEvents.arrDefinitions [iNumber].bConfirm AND NOT THIS^.stEvents.arrConfirmation [iNumber]) OR NOT THIS^.stEvents.arrDefinitions [iNumber].bConfirm) THEN
		THIS^.stEvents.arrConfirmation [iNumber] 	:= TRUE;
		btmpExit									:= TRUE;
		IF (THIS^.stEvents.bLoggerDataCompleted) THEN
			sttmpRow.eEventAction		:= E_BaseEvents_Action.Confirm;
			sttmpRow.uiIDEvent			:= THIS^.stEvents.arrDefinitions [iNumber].uiIDEvent;
			sttmpRow.dtConfirmed		:= THIS^.refstCommonData.itfTime.StampDT ();
		
			THIS^.refstCommonData.itfLogger.ReportEvent (stEvent	:= sttmpRow);	
			btmpExit						:= btmpExit;
		ELSE
			btmpExit						:= FALSE;
		END_IF
	END_IF	
END_IF
EventAcknowledge					:= btmpExit;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EventAcknowledgeByID" Id="{d6ae372f-a167-0547-2911-1a7a4a3c6316}" FolderPath="Events\">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		09.06.2025		TC 4024.66
	Szuka czy ma zgłoszenie i zadanym ID jak tak to usuwa i zwraca true w przeciwnym razie zwraca false 
*)
METHOD PUBLIC EventAcknowledgeByID : BOOL
VAR_INPUT
	uiIDEvent				: UINT;
END_VAR

VAR
	iI: INT;
	bResult: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR iI := 1 TO TO_INT (THIS^.stEvents.uiNumberOfAdded) DO
	IF (THIS^.stEvents.arrDefinitions [iI].uiIDEvent = uiIDEvent AND THIS^.stEvents.arrDefinitions [iI].bConfirm) THEN	//Zgłoszenie znalezione
		IF (THIS^.EventAcknowledge (iNumber	:= iI)) THEN
			bResult							:= TRUE;
			EXIT;
		END_IF
	END_IF
END_FOR
EventAcknowledgeByID					:= bResult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EventDoesRequireConfirmation" Id="{ed9b1b27-2bf5-0d81-22a7-2afd78672f3a}" FolderPath="Events\">
      <Declaration><![CDATA[METHOD PROTECTED EventDoesRequireConfirmation : BOOL
VAR_INPUT
	iNumber				: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[EventDoesRequireConfirmation		:= THIS^.stEvents.arrDefinitions [iNumber].bConfirm;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EventIsActive" Id="{26eab0fd-2bb3-0346-0602-400ebebb16bf}" FolderPath="Events\">
      <Declaration><![CDATA[(*			EVERDE sp. z o.o.
	Rafał Osajda		16.10.2024		TC 4026.11		wer. 0.0.0.1
	Zwraca aktualny stan wybranego zgłoszenia
*)
METHOD PROTECTED EventIsActive : BOOL
VAR_INPUT
	iNumber					: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (iNumber > 0 AND iNumber <= TO_INT (THIS^.stEvents.uiNumberOfAdded)) THEN
	EventIsActive			:= THIS^.stEvents.arrState [iNumber];
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EventsDefinition" Id="{d570146c-fc2a-0a65-1409-5460668a36c6}" FolderPath="Events\">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		24.03.2025		TC 4024.66
	Definicja nowego zgłoszenia
*)
METHOD PUBLIC EventsDefinition : BOOL

]]></Declaration>
      <Implementation>
        <ST><![CDATA[MEMSET (
	destAddr		:= ADR (THIS^.stEvents.arrDefinitions),
	fillByte		:= 0,
	n				:= SIZEOF (THIS^.stEvents.arrDefinitions)
);
THIS^.stEvents.uiNumberOfAdded	:= 0;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EventSetActive" Id="{cd4c6b9b-bccf-068d-166d-01d15ad0e0f4}" FolderPath="Events\">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		24.03.2025		TC 4024.66
	Zgloszenie nowe wlacz 
*)
METHOD PROTECTED EventSetActive : BOOL
VAR_INPUT
	iNumber					: INT; //numer zgloszenia w elemencie
END_VAR
VAR
	sttmpRow				: ST_BaseEvents_RowInQueue;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (iNumber > 0 AND iNumber <= TO_INT (THIS^.stEvents.uiNumberOfAdded) AND NOT THIS^.stEvents.arrState [iNumber]) THEN
	THIS^.stEvents.arrState [iNumber]		:= TRUE;
	IF (NOT THIS^.stEvents.arrDefinitions [iNumber].bIgnoreRepetitions) THEN
		THIS^.stEvents.arrDefinitions [iNumber].uiRepetitionCounter := THIS^.stEvents.arrDefinitions [iNumber].uiRepetitionCounter + 1;
	END_IF
	IF (THIS^.stEvents.bLoggerDataCompleted) THEN
		sttmpRow.eEventAction		:= E_BaseEvents_Action.Start;
		sttmpRow.uiIDEvent			:= THIS^.stEvents.arrDefinitions [iNumber].uiIDEvent;
		sttmpRow.bActive			:= TRUE;
		sttmpRow.bIgnoreRepetitions	:= THIS^.stEvents.arrDefinitions [iNumber].bIgnoreRepetitions;
		sttmpRow.dtStart			:= THIS^.refstCommonData.itfTime.StampDT ();
		sttmpRow.uiRepetitionCounter:= THIS^.stEvents.arrDefinitions [iNumber].uiRepetitionCounter;
		sttmpRow.eEventCategory		:= THIS^.stEvents.arrDefinitions [iNumber].eEventCategory;
		sttmpRow.bConfirm			:= THIS^.stEvents.arrDefinitions [iNumber].bConfirm;
		sttmpRow.uiIDItem			:= THIS^.stIdentifier.uiID;
		
		THIS^.refstCommonData.itfLogger.ReportEvent (stEvent := sttmpRow);
		THIS^.stEvents.iNumberOfActiveEvents	:= THIS^.stEvents.iNumberOfActiveEvents + 1;
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EventSetInactive" Id="{cbc377f7-8b9e-032f-3bcd-c0c642b3107f}" FolderPath="Events\">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		24.03.2025		TC 4024.66
	Zgloszenie zakonczone wylacz
*)
METHOD PROTECTED EventSetInactive : BOOL
VAR_INPUT
	iNumber				: INT;
END_VAR
VAR
	iI					: INT;
	sttmpRow			: ST_BaseEvents_RowInQueue;
	btmpExit			: BOOL := FALSE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (iNumber > 0 AND iNumber <= TO_INT (THIS^.stEvents.uiNumberOfAdded) AND THIS^.stEvents.arrState [iNumber]) THEN
	IF ((THIS^.stEvents.arrDefinitions [iNumber].bConfirm AND THIS^.stEvents.arrConfirmation [iNumber]) OR NOT THIS^.stEvents.arrDefinitions [iNumber].bConfirm) THEN
		stEvents.arrState [iNumber]					:= FALSE;
		THIS^.stEvents.arrConfirmation [iNumber]	:= FALSE;
		btmpExit									:= TRUE;
	END_IF
	IF (THIS^.stEvents.bLoggerDataCompleted) THEN
		sttmpRow.eEventAction		:= E_BaseEvents_Action.Stop;
		sttmpRow.uiIDEvent			:= THIS^.stEvents.arrDefinitions [iNumber].uiIDEvent;
		sttmpRow.dtFinish			:= THIS^.refstCommonData.itfTime.StampDT ();
		sttmpRow.bActive			:= FALSE;
	
		THIS^.refstCommonData.itfLogger.ReportEvent (stEvent	:= sttmpRow);
		THIS^.stEvents.iNumberOfActiveEvents	:= THIS^.stEvents.iNumberOfActiveEvents - 1;
		btmpExit						:= btmpExit;
	ELSE
		btmpExit						:= FALSE;
	END_IF
END_IF
EventSetInactive 						:= btmpExit;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EventSetInactiveByID" Id="{9d42079a-a5a3-0b10-1300-b37d8a078d2a}" FolderPath="Events\">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		09.06.2025		TC 4024.66
	Szuka czy ma zgłoszenie i zadanym ID jak tak to usuwa i zwraca true w przeciwnym razie zwraca false 
*)
METHOD PUBLIC EventSetInactiveByID : BOOL
VAR_INPUT
	uiIDEvent				: UINT;
END_VAR

VAR
	iI: INT;
	bResult: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR iI := 1 TO TO_INT (THIS^.stEvents.uiNumberOfAdded) DO
	IF (THIS^.stEvents.arrDefinitions [iI].uiIDEvent = uiIDEvent AND
		((NOT THIS^.stEvents.arrDefinitions [iI].bConfirm) OR 
			(THIS^.stEvents.arrDefinitions [iI].bConfirm AND THIS^.stEvents.arrConfirmation [iI]))) THEN	//Zgłoszenie znalezione
		IF (THIS^.EventSetInactive (iNumber := iI)) THEN
			bResult							:= TRUE;
			EXIT;
		END_IF
	END_IF
END_FOR
EventSetInactiveByID						:= bResult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FirstCycle" Id="{c59af0fe-9b69-0431-255c-4b5a82a26450}">
      <Declaration><![CDATA[(*			
	RAFALOS
	Rafał Osajda		25.09.2025		TC 4024.66
	Metoda wywoływana w pierwszym cyklu
*)
METHOD PUBLIC FirstCycle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[	(*	Zdefiniowanie zdarzeń dla elementu	*)
THIS^.EventsDefinition ();
(* sprawdzenie czy jest podłaczony loger	*)
THIS^.stEvents.bLoggerDataCompleted	:= THIS^.refstCommonData.itfLogger <> 0;

FirstCycle					:= TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetCode" Id="{af745aea-1b66-059b-10b2-395e94251847}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC GetCode : STRING
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetCode			:= THIS^.stIdentifier.sCode;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetID" Id="{76a78e74-7761-0532-0c6a-49d51d5b5955}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC GetID : UINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetID				:= THIS^.stIdentifier.uiID;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetIdentyfier" Id="{48d63181-6e27-0c5e-3c1d-ae09759ac84b}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC GetIdentyfier : ST_BaseElementIdentifier
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetIdentyfier				:= THIS^.stIdentifier;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetInformationToDisplayEvent" Id="{250fc7d9-7cf6-0559-0b55-e164b6a582bc}" FolderPath="ITF_BaseLogger_Item\">
      <Declaration><![CDATA[METHOD GetInformationToDisplayEvent : ST_BaseLogger_ItemDataToDisplay
VAR_INPUT
	uiIDEvent				: UINT;
END_VAR
VAR
	sttmpResult				: ST_BaseLogger_ItemDataToDisplay;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[sttmpResult.stItemName		:= THIS^.stIdentifier.stName;
sttmpResult.sCode			:= THIS^.stIdentifier.sCode;
sttmpResult.stDescription	:= THIS^.stEvents.arrDefinitions [uiIDEvent].stDescription;
sttmpResult.eEventCategory	:= THIS^.stEvents.arrDefinitions [uiIDEvent].eEventCategory;
sttmpResult.sEventCategory	:= TO_STRING (THIS^.stEvents.arrDefinitions [uiIDEvent].eEventCategory);
sttmpResult.uiRepetitionCounter	:= THIS^.stEvents.arrDefinitions [uiIDEvent].uiRepetitionCounter;

GetInformationToDisplayEvent	:= sttmpResult;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetName" Id="{f31b5203-9f85-03eb-3e31-406645634fd5}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC GetName : ST_BaseLabel
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetName				:= THIS^.stIdentifier.stName;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetType" Id="{61940ec7-463b-0e69-2135-9287ae34093b}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC GetType : E_BaseElementType
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetType				:= THIS^.stIdentifier.eType;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetCode" Id="{fe7a56f6-55e1-0e90-11d6-90800c0cf084}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC SetCode
VAR_INPUT
	sCode							: STRING;
	sAdd							: STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.stIdentifier.sCode				:= sCode;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetEventsIDs" Id="{84a4a006-1e0f-0e23-3e24-f3c4945bc416}" FolderPath="Events\">
      <Declaration><![CDATA[(*			
	EVERDE sp. z o.o.
	Rafał Osajda		03.10.2025		TC 4024.66
	nadawanie unikalnych ID dla zdarzeń
*)
METHOD PUBLIC SetEventsIDs : UINT
VAR_INPUT
	uiNewID		: UINT;
END_VAR
VAR
	uiI			: UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (THIS^.stEvents.uiNumberOfAdded > 0) THEN
	FOR uiI := 1 TO THIS^.stEvents.uiNumberOfAdded DO
		THIS^.stEvents.arrDefinitions [uiI].uiIDEvent	:= uiNewID + uiI - 1;
	END_FOR
	SetEventsIDs				:= uiNewID + THIS^.stEvents.uiNumberOfAdded;
ELSE
	SetEventsIDs				:= uiNewID;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetID" Id="{9acba3a6-fc5f-0ece-1ab3-a775104efe88}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC SetID : UINT
VAR_INPUT
	uiID					: UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.stIdentifier.uiID			:= uiID;
SetID							:= uiID;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetName" Id="{206e85b8-29f8-08fa-23dd-60a3f6071df5}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC SetName
VAR_INPUT
	stName				: ST_BaseLabel;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[this^.stIdentifier.stName			:= stName;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetType" Id="{bf11665f-1c90-0e8a-0bd5-6357f50d48e0}" FolderPath="ID\">
      <Declaration><![CDATA[METHOD PUBLIC SetType
VAR_INPUT
	eType					: E_BaseElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.stIdentifier.eType				:= eType;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="ZwrocDaneDlaZgloszeniaOID" Id="{783c910b-7378-0a9b-3338-86ff62a6be2a}" FolderPath="Events\">
      <Declaration><![CDATA[METHOD PUBLIC ZwrocDaneDlaZgloszeniaOID : BOOL
VAR_INPUT
	uiIDZgloszenia				: UINT;
END_VAR
VAR_OUTPUT
	uiIDElementu				: UINT;
	sKodElementu				: STRING;
	sRodzajZgloszenia			: STRING;
	eRodzajZgloszenia			: E_BaseEvents_Category;
	stOpis						: ST_BaseLabel;
	stTekstElementu				: ST_BaseLabel;
END_VAR
VAR
	iI: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR iI := 1 TO TO_INT (THIS^.stEvents.uiNumberOfAdded) DO
	IF (THIS^.stEvents.arrDefinitions [iI].uiIDEvent = uiIDElementu) THEN
		uiIDElementu				:= THIS^.stIdentifier.uiID;
	    sKodElementu				:= THIS^.stIdentifier.sCode;
	    sRodzajZgloszenia			:= TO_STRING (THIS^.stEvents.arrDefinitions [iI].eEventCategory);
	    eRodzajZgloszenia			:= THIS^.stEvents.arrDefinitions [iI].eEventCategory;
	    stOpis						:= THIS^.stEvents.arrDefinitions [iI].stDescription;
		stTekstElementu				:= THIS^.stIdentifier.stName;
		ZwrocDaneDlaZgloszeniaOID	:= TRUE;
		EXIT;
	END_IF
END_FOR
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>