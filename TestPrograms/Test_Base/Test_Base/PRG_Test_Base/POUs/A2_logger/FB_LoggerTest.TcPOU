<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_LoggerTest" Id="{bdd902bd-8721-4963-bac8-ed229424c4e8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_LoggerTest EXTENDS TcUnit.FB_TestSuite
VAR

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
T01_TestDodawaniaZgloszen ();
T02_TestDodawaniaZgloszen2 ();
T03_TestDodawaniaZgloszen3 ();
T04_TestDodawaniaKomponentowDoLogera ();
]]></ST>
    </Implementation>
    <Method Name="T01_TestDodawaniaZgloszen" Id="{95b1bee2-2fa2-40b4-ace9-9bed2d0ad664}">
      <Declaration><![CDATA[METHOD PRIVATE T01_TestDodawaniaZgloszen
VAR
	sttmpEvent: ST_BaseEvents_RowInQueue;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (TcUnit.TEST_ORDERED ('T01_TestDodawaniaZgloszen')) THEN
	WRITE_PROTECTED_BOOL (Ptr := ADR (GVL.fbLogger.bClearMemory), Value := TRUE);
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 	Message := 'T01a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stmemory.iNumberOfRow,		Message := 'T01b - bledna ilosc zgloszen');
//wyslanie zgloszenia 
	sttmpEvent.bActive				:= TRUE;
	sttmpEvent.bConfirm				:= TRUE;
	sttmpEvent.bIgnoreRepetitions	:= TRUE;
	sttmpEvent.dtStart				:= DT#2025-09-25-01:00:00;
	sttmpEvent.eEventCategory		:= E_BaseEvents_Category.Error;
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Start;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 2;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 	Message := 'T02a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stmemory.iNumberOfRow,		Message := 'T02b - bledna ilosc zgloszen');
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T03a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T03b - bledna ilosc zgloszen');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stNumberOfReports.iNumberOfActive,			Message := 'T03c - bledna ilosc zgloszen');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Error],	Message := 'T03d - bledny stan');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Alarm],	Message := 'T03d - bledny stan');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.bIsActive,									Message := 'T03e - bledny stan');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stNumberOfReports.iTotalNumer,				Message := 'T03f - bledna ilosc zgloszen');
//potwierdzenie zgloszenia 
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Confirm;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 2;
	sttmpEvent.dtConfirmed			:= DT#2025-09-25-01:01:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T04a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T04b - bledna ilosc zgloszen');
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T05a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T05b - bledna ilosc zgloszen');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stNumberOfReports.iNumberOfActive,			Message := 'T05c - bledna ilosc zgloszen');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Error],	Message := 'T05d - bledny stan');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Alarm],	Message := 'T05d - bledny stan');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.bIsActive,									Message := 'T05e - bledny stan');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stNumberOfReports.iTotalNumer,				Message := 'T05f - bledna ilosc zgloszen');
//zamkniecie zgloszenia 
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Stop;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 2;
	sttmpEvent.dtFinish				:= DT#2025-09-25-01:02:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T04a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T04b - bledna ilosc zgloszen');
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T05a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T05b - bledna ilosc zgloszen');
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stNumberOfReports.iNumberOfActive,			Message := 'T05c - bledna ilosc zgloszen');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Error],	Message := 'T05d - bledny stan');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Alarm],	Message := 'T05d - bledny stan');
	Assertfalse (Condition := GVL.fbLogger.stNumberOfReports.bIsActive,									Message := 'T05e - bledny stan');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stNumberOfReports.iTotalNumer,				Message := 'T05f - bledna ilosc zgloszen');
	
	
	TcUnit.TEST_FINISHED ();
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="T02_TestDodawaniaZgloszen2" Id="{c6c2cab5-9412-4025-920f-725b656de169}">
      <Declaration><![CDATA[METHOD PRIVATE T02_TestDodawaniaZgloszen2
VAR
	sttmpEvent: ST_BaseEvents_RowInQueue;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (TcUnit.TEST_ORDERED ('T02_TestDodawaniaZgloszen2')) THEN
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 	Message := 'T01a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stmemory.iNumberOfRow,		Message := 'T01b - bledna ilosc zgloszen');
//wyslanie zgloszenia 
	sttmpEvent.bActive				:= TRUE;
	sttmpEvent.bConfirm				:= TRUE;
	sttmpEvent.bIgnoreRepetitions	:= TRUE;
	sttmpEvent.dtStart				:= DT#2025-09-25-02:00:00;
	sttmpEvent.eEventCategory		:= E_BaseEvents_Category.Error;
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Start;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 2;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T02a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T02b - bledna ilosc zgloszen');
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T03a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T03b - bledna ilosc zgloszen');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stNumberOfReports.iNumberOfActive,			Message := 'T03c - bledna ilosc zgloszen');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Error],	Message := 'T03d - bledny stan');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Alarm],	Message := 'T03d - bledny stan');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.bIsActive,									Message := 'T03e - bledny stan');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stNumberOfReports.iTotalNumer,				Message := 'T03f - bledna ilosc zgloszen');
//zamkniecie zgloszenia  bez potwierdzenia a wymagane nic się nei powinno stać
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Stop;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 2;
	sttmpEvent.dtFinish				:= DT#2025-09-25-02:00:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T04a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T04b - bledna ilosc zgloszen');
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T05a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T05b - bledna ilosc zgloszen');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stNumberOfReports.iNumberOfActive,			Message := 'T05c - bledna ilosc zgloszen');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Error],	Message := 'T05d - bledny stan');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Alarm],	Message := 'T05d - bledny stan');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.bIsActive,									Message := 'T05e - bledny stan');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stNumberOfReports.iTotalNumer,				Message := 'T05f - bledna ilosc zgloszen');
//potwierdzenie zgloszenia 
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Confirm;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 2;
	sttmpEvent.dtConfirmed			:= DT#2025-09-25-02:01:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T06a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T06b - bledna ilosc zgloszen');
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T07a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T07b - bledna ilosc zgloszen');
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stNumberOfReports.iNumberOfActive,			Message := 'T07c - bledna ilosc zgloszen');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Error],	Message := 'T07d - bledny stan');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Alarm],	Message := 'T07d - bledny stan');
	AssertTrue (Condition := GVL.fbLogger.stNumberOfReports.bIsActive,									Message := 'T07e - bledny stan');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stNumberOfReports.iTotalNumer,				Message := 'T07f - bledna ilosc zgloszen');
//zamkniecie zgloszenia 
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Stop;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 2;
	sttmpEvent.dtFinish				:= DT#2025-09-25-02:02:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	AssertEquals_INT (Expected := 1, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T08a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T08b - bledna ilosc zgloszen');
	GVL.fbLogger ();
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stBuffer.iNumerOfEvents, 					Message := 'T09a - bledna ilosc w kolejce');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stmemory.iNumberOfRow,						Message := 'T09b - bledna ilosc zgloszen');
	AssertEquals_INT (Expected := 0, Actual := GVL.fbLogger.stNumberOfReports.iNumberOfActive,			Message := 'T09c - bledna ilosc zgloszen');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Error],	Message := 'T09d - bledny stan');
	AssertFalse (Condition := GVL.fbLogger.stNumberOfReports.arrActive [E_BaseEvents_Category.Alarm],	Message := 'T09d - bledny stan');
	Assertfalse (Condition := GVL.fbLogger.stNumberOfReports.bIsActive,									Message := 'T09e - bledny stan');
	AssertEquals_INT (Expected := 2, Actual := GVL.fbLogger.stNumberOfReports.iTotalNumer,				Message := 'T09f - bledna ilosc zgloszen');
	
	
	TcUnit.TEST_FINISHED ();
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="T03_TestDodawaniaZgloszen3" Id="{26235af6-606c-4534-abe3-d37bb2afacab}">
      <Declaration><![CDATA[METHOD PRIVATE T03_TestDodawaniaZgloszen3
VAR
	sttmpEvent: ST_BaseEvents_RowInQueue;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (TcUnit.TEST_ORDERED ('T03_TestDodawaniaZgloszen3')) THEN
//wyslanie zgloszenia 
	sttmpEvent.bActive				:= TRUE;
	sttmpEvent.bConfirm				:= FALSE;
	sttmpEvent.bIgnoreRepetitions	:= FALSE;
	sttmpEvent.dtStart				:= DT#2025-09-25-03:00:00;
	sttmpEvent.eEventCategory		:= E_BaseEvents_Category.Alarm;
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Start;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 1;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
//zamkniecie zgloszenia 
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Stop;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 1;
	sttmpEvent.dtFinish				:= DT#2025-09-25-03:02:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
//wyslanie zgloszenia 
	sttmpEvent.bActive				:= TRUE;
	sttmpEvent.bConfirm				:= FALSE;
	sttmpEvent.bIgnoreRepetitions	:= FALSE;
	sttmpEvent.dtStart				:= DT#2025-09-25-03:10:00;
	sttmpEvent.eEventCategory		:= E_BaseEvents_Category.Alarm;
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Start;
	sttmpEvent.uiIDEvent			:= 1;
	sttmpEvent.uiIDItem				:= 1;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
//wyslanie zgloszenia 
	sttmpEvent.bActive				:= TRUE;
	sttmpEvent.bConfirm				:= TRUE;
	sttmpEvent.bIgnoreRepetitions	:= TRUE;
	sttmpEvent.dtStart				:= DT#2025-09-25-03:20:00;
	sttmpEvent.eEventCategory		:= E_BaseEvents_Category.Error;
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Start;
	sttmpEvent.uiIDEvent			:= 2;
	sttmpEvent.uiIDItem				:= 1;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
//potwierdzenie zgloszenia 
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Confirm;
	sttmpEvent.uiIDEvent			:= 2;
	sttmpEvent.uiIDItem				:= 1;
	sttmpEvent.dtConfirmed			:= DT#2025-09-25-03:21:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
//zamkniecie zgloszenia 
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Stop;
	sttmpEvent.uiIDEvent			:= 2;
	sttmpEvent.uiIDItem				:= 1;
	sttmpEvent.dtFinish				:= DT#2025-09-25-03:22:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
//wyslanie zgloszenia 
	sttmpEvent.bActive				:= TRUE;
	sttmpEvent.bConfirm				:= FALSE;
	sttmpEvent.bIgnoreRepetitions	:= TRUE;
	sttmpEvent.dtStart				:= DT#2025-09-25-04:00:00;
	sttmpEvent.eEventCategory		:= E_BaseEvents_Category.Error;
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Start;
	sttmpEvent.uiIDEvent			:= 3;
	sttmpEvent.uiIDItem				:= 1;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
//wyslanie zgloszenia 
	sttmpEvent.bActive				:= TRUE;
	sttmpEvent.bConfirm				:= FALSE;
	sttmpEvent.bIgnoreRepetitions	:= TRUE;
	sttmpEvent.dtStart				:= DT#2025-09-25-04:20:00;
	sttmpEvent.eEventCategory		:= E_BaseEvents_Category.Message;
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Start;
	sttmpEvent.uiIDEvent			:= 4;
	sttmpEvent.uiIDItem				:= 1;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
//zamkniecie zgloszenia 
	sttmpEvent.eEventAction			:= E_BaseEvents_Action.Stop;
	sttmpEvent.uiIDEvent			:= 4;
	sttmpEvent.uiIDItem				:= 1;
	sttmpEvent.dtFinish				:= DT#2025-09-25-04:22:00;
	GVL.fbLogger.ReportEvent (stEvent := sttmpEvent);
	GVL.fbLogger ();
	
	
	TcUnit.TEST_FINISHED ();
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="T04_TestDodawaniaKomponentowDoLogera" Id="{e4d2f7e6-e99a-4701-b464-32e151edbb73}">
      <Declaration><![CDATA[METHOD PROTECTED T04_TestDodawaniaKomponentowDoLogera
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (TcUnit.TEST_ORDERED ('T04_TestDodawaniaKomponentowDoLogera')) THEN
	GVL_Variable.fbComponent_1_L.SetID (uiID 	:= 1);
	GVL_Variable.fbComponent_2_L.SetID (uiID 	:= 2);
	GVL_Variable.fbComponent_3_L.SetID (uiID 	:= 3);
	

	GVL.fbLogger.AddItem (itfItem := GVL_Variable.fbComponent_1_L);
	GVL.fbLogger.AddItem (itfItem := GVL_Variable.fbComponent_2_L);
	GVL.fbLogger.AddItem (itfItem := GVL_Variable.fbComponent_3_L);
	
//dodać testowanie dodawania FB_Control FB_Group i FB_Top	
	TcUnit.TEST_FINISHED ();
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>