<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_CommandTest" Id="{20ace256-dafa-058e-3c0b-f94a17f6a90e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CommandTest EXTENDS TcUnit.FB_TestSuite
VAR
	
	
	
	sTekst				: string;
	bJest				: BOOL;
	bKoniec				: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//GVL.fbCommandEasy (); //wywolanie testowe w normalnym programie tego nei trzeba robić
//GVL.fbCommandEasy.Test ();
//GVL.fbPolecenieProste ();
//GVL.fbPolecenieProste.Test ();


//IF (GVL.fbCommandEasy.OperationExecute ()) THEN
//	GVL.fbCommandEasy.Operation (bIN := MetodaDlaPolecenbiaProstego ());
//END_IF

//IF (GVL.fbPolecenie.OperacjeWykonaj ()) THEN
//	GVL.fbPolecenie.Operacje (bIN := GVL_Zmienne.fbPolecenie.CyklTestu ());
//END_IF

T01_TestPoleceniaProstego ();

//T02_TestPoleceniaZlozonego ();
//T99_Test ();
]]></ST>
    </Implementation>
    <Method Name="MetodaDlaPolecenbiaProstego" Id="{a3669c83-8900-0492-1d65-080f0e67aca3}">
      <Declaration><![CDATA[METHOD PUBLIC MetodaDlaPolecenbiaProstego : bool
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.sTekst := 'jestem w tej metodzie';
MetodaDlaPolecenbiaProstego	:= FALSE;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="T01_TestPoleceniaProstego" Id="{189cc450-0321-4f98-954b-f6f385951fca}">
      <Declaration><![CDATA[METHOD PROTECTED T01_TestPoleceniaProstego
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (TcUnit.TEST_ORDERED ('T01_TestPoleceniaProstego')) THEN
	GVL.fbCommandEasy.Test ();
	AssertTrue (Condition := GVL.fbCommandEasy.GetStatus (), 	Message := 'T01a - Bledny status');
	AssertFalse (Condition := GVL.fbCommandEasy.GetBusy (),		Message := 'T01b - Bledny stan');
	GVL.fbCommandEasy.Execute ();
	GVL.fbCommandEasy.Test ();
	AssertFalse (Condition := GVL.fbCommandEasy.GetStatus (), 	Message := 'T02a - Bledny status');
	AssertTrue (Condition := GVL.fbCommandEasy.GetBusy (),		Message := 'T02b - Bledny stan');
	
	GVL.fbCommandEasy.OperationExecute ();
	GVL.fbCommandEasy.Operation (bIN := MetodaDlaPolecenbiaProstego ());
	
	AssertTrue (Condition := GVL.fbCommandEasy.GetFirstCycle (),Message := 'T03a - Bledny stan pierwszego przejscia');
	
	GVL.fbCommandEasy.Operation (bIN := MetodaDlaPolecenbiaProstego ());
	
	AssertFalse (Condition := GVL.fbCommandEasy.GetFirstCycle (),	Message := 'T04a - Bledny stan pierwszego przejscia');
	AssertTrue (Condition := GVL.fbCommandEasy.GetLastCycle (),		Message := 'T04b - Bledny stan ostatniego przejscia');

	GVL.fbCommandEasy.Operation (bIN := MetodaDlaPolecenbiaProstego ());
	
	AssertFalse (Condition := GVL.fbCommandEasy.GetLastCycle (),	Message := 'T05a - Bledny stan pierwszego przejscia');
	AssertTrue (Condition := GVL.fbCommandEasy.GetStatus (),		Message := 'T05b - Bledny stan statusy');
	
	TcUnit.TEST_FINISHED ();
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="T02_TestPoleceniaZlozonego" Id="{43608b7a-59c3-0e6c-3955-7f748c17b7f8}">
      <Declaration><![CDATA[METHOD PROTECTED T02_TestPoleceniaZlozonego : BOOL
VAR_INST
	iKrok				: INT;

END_VAR

VAR
	bWynik: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
IF (TcUnit.TEST_ORDERED ('T01_TestPolecenia')) THEN
	CASE iKrok OF
	0	:
		GVL_Zmienne.fbPolecenie.Wykonaj (bIN	:= TRUE);
		AssertTrue (Condition := GVL_Zmienne.fbPolecenie.bWykonaj, 				Message := 'K00 - T01 - polecenie nie uruchomone');
		iKrok 						:= iKrok + 10;
	10		:
		AssertTrue (Condition := 	GVL_Zmienne.fbPolecenie.zwrocTrwa (),		Message := 'K10 - T01 - polecenie nie zalaczone');
		AssertTrue (Condition := 	GVL_Zmienne.fbPolecenie.PierwszyCykl (),	Message := 'K10 - T02 - pierwszy cykl');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.zwrocStatus (),		Message := 'K10 - T03 - bledny status');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.OstatniCykl (),		Message := 'K10 - T04 - bledny ostatni cykl');
		iKrok						:= iKrok + 10;
	20		:
		AssertTrue (Condition := 	GVL_Zmienne.fbPolecenie.zwrocTrwa (),		Message := 'K20 - T01 - polecenie nie zalaczone');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.PierwszyCykl (),	Message := 'K20 - T02 - pierwszy cykl');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.zwrocStatus (),		Message := 'K20 - T03 - bledny status');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.OstatniCykl (),		Message := 'K20 - T04 - bledny ostatni cykl');
		iKrok						:= iKrok + 10;
	30	:	
		AssertTrue (Condition := 	GVL_Zmienne.fbPolecenie.zwrocTrwa (),		Message := 'K30 - T01 - polecenie nie zalaczone');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.PierwszyCykl (),	Message := 'K30 - T02 - pierwszy cykl');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.zwrocStatus (),		Message := 'K30 - T03 - bledny status');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.OstatniCykl (),		Message := 'K30 - T04 - bledny ostatni cykl');
		WRITE_PROTECTED_BOOL (ADR (GVL_Zmienne.fbPolecenie.bZakoncz), TRUE);
		iKrok						:= iKrok + 10;
	40		:
//		AssertTrue (Condition := 	fbPolecenie.zwrocTrwa (),		Message := 'K40 - T01 - polecenie nie zalaczone');
//		AssertFalse (Condition := 	fbPolecenie.PierwszyCykl (),	Message := 'K40 - T02 - pierwszy cykl');
//		AssertFalse (Condition := 	fbPolecenie.zwrocStatus (),		Message := 'K40 - T03 - bledny status');
//		Assertfalse (Condition := 	fbPolecenie.OstatniCykl (),		Message := 'K40 - T04 - bledny ostatni cykl');
//		iKrok						:= iKrok + 10;
//	50		:
		AssertTrue (Condition := 	GVL_Zmienne.fbPolecenie.zwrocTrwa (),		Message := 'K50 - T01 - polecenie nie zalaczone');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.PierwszyCykl (),	Message := 'K50 - T02 - pierwszy cykl');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.zwrocStatus (),		Message := 'K50 - T03 - bledny status');
		Asserttrue (Condition := 	GVL_Zmienne.fbPolecenie.OstatniCykl (),		Message := 'K50 - T04 - bledny ostatni cykl');
		iKrok						:= iKrok + 10;
	50	:
		Assertfalse (Condition := 	GVL_Zmienne.fbPolecenie.zwrocTrwa (),		Message := 'K60 - T01 - polecenie nie zalaczone');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.PierwszyCykl (),	Message := 'K60 - T02 - pierwszy cykl');
		AssertTrue (Condition := 	GVL_Zmienne.fbPolecenie.zwrocStatus (),		Message := 'K60 - T03 - bledny status');
		AssertFalse (Condition := 	GVL_Zmienne.fbPolecenie.OstatniCykl (),		Message := 'K60 - T04 - bledny ostatni cykl');
		iKrok						:= 1000;
	1000	:
		TcUnit.TEST_FINISHED ();
	END_CASE

END_IF
*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="T99_Test" Id="{6713c4ba-ed0c-0cdf-32c3-aa85ba0eb5b1}">
      <Declaration><![CDATA[METHOD PROTECTED T99_Test
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (TcUnit.TEST_ORDERED ('T99_test')) THEN
	bJest				:= TRUE;
	IF bKoniec THEN
		TcUnit.TEST_FINISHED ();
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CommandTest">
      <LineId Id="32" Count="17" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CommandTest.MetodaDlaPolecenbiaProstego">
      <LineId Id="3" Count="2" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CommandTest.T01_TestPoleceniaProstego">
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="2" />
      <LineId Id="15" Count="0" />
      <LineId Id="17" Count="2" />
      <LineId Id="16" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="24" Count="2" />
      <LineId Id="28" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="29" Count="3" />
      <LineId Id="14" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="7" Count="1" />
    </LineIds>
    <LineIds Name="FB_CommandTest.T02_TestPoleceniaZlozonego">
      <LineId Id="107" Count="0" />
      <LineId Id="59" Count="47" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CommandTest.T99_Test">
      <LineId Id="3" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>