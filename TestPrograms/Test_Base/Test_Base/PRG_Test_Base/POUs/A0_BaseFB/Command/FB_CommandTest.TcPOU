<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_CommandTest" Id="{20ace256-dafa-058e-3c0b-f94a17f6a90e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CommandTest EXTENDS TcUnit.FB_TestSuite
VAR
	sText			: STRING;
	iCounter		: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
T01_TestPoleceniaProstego ();
T02_TestPoleceniaZlozonego ();
]]></ST>
    </Implementation>
    <Method Name="MetodaDlaPolecenbiaProstego" Id="{a3669c83-8900-0492-1d65-080f0e67aca3}">
      <Declaration><![CDATA[METHOD PUBLIC MetodaDlaPolecenbiaProstego : bool
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.sText := 'jestem w tej metodzie';
iCounter := iCounter + 1;
MetodaDlaPolecenbiaProstego	:= FALSE;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="T01_TestPoleceniaProstego" Id="{189cc450-0321-4f98-954b-f6f385951fca}">
      <Declaration><![CDATA[METHOD PROTECTED T01_TestPoleceniaProstego
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (TcUnit.TEST_ORDERED ('T01_TestPoleceniaProstego')) THEN
	GVL.fbCommandEasy.Test ();
	AssertTrue (Condition := GVL.fbCommandEasy.GetStatus (), 	Message := 'T01a - Bledny status');
	AssertFalse (Condition := GVL.fbCommandEasy.GetBusy (),		Message := 'T01b - Bledny stan');
	GVL.fbCommandEasy.Execute ();
	GVL.fbCommandEasy.Test ();
	AssertFalse (Condition := GVL.fbCommandEasy.GetStatus (), 	Message := 'T02a - Bledny status');
	AssertTrue (Condition := GVL.fbCommandEasy.GetBusy (),		Message := 'T02b - Bledny stan');
	
	GVL.fbCommandEasy.OperationExecute ();
	GVL.fbCommandEasy.Operation (bIN := MetodaDlaPolecenbiaProstego ());
	
	AssertTrue (Condition := GVL.fbCommandEasy.GetFirstCycle (),Message := 'T03a - Bledny stan pierwszego przejscia');
	AssertTrue (Condition := GVL.fbCommandEasy.GetLastCycle (),	Message := 'T03b - Bledny stan ostatniego przejscia');
	
	GVL.fbCommandEasy.OperationExecute ();
	
	AssertFalse (Condition := GVL.fbCommandEasy.GetFirstCycle (),	Message := 'T04a - Bledny stan pierwszego przejscia');
	AssertFalse (Condition := GVL.fbCommandEasy.GetLastCycle (),		Message := 'T04b - Bledny stan ostatniego przejscia');

	GVL.fbCommandEasy.OperationExecute ();
	
	AssertFalse (Condition := GVL.fbCommandEasy.GetLastCycle (),	Message := 'T05a - Bledny stan pierwszego przejscia');
	AssertTrue (Condition := GVL.fbCommandEasy.GetStatus (),		Message := 'T05b - Bledny stan statusy');
	
	TcUnit.TEST_FINISHED ();
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="T02_TestPoleceniaZlozonego" Id="{43608b7a-59c3-0e6c-3955-7f748c17b7f8}">
      <Declaration><![CDATA[METHOD PROTECTED T02_TestPoleceniaZlozonego : BOOL

VAR
	bResult: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (TcUnit.TEST_ORDERED ('T02_TestPolecenia')) THEN
	GVL.fbCommand.Test ();
	AssertTrue (Condition := GVL.fbCommand.GetStatus (), 	Message := 'T01a - Bledny status');
	AssertFalse (Condition := GVL.fbCommand.GetBusy (),		Message := 'T01b - Bledny stan');
	
	GVL.fbCommand.Execute ();
	GVL.fbCommand.Test ();
	AssertFalse (Condition := GVL.fbCommand.GetStatus (), 	Message := 'T02a - Bledny status');
	AssertTrue (Condition := GVL.fbCommand.GetBusy (),		Message := 'T02b - Bledny stan');
	
	IF (GVL.fbCommand.OperationExecute ()) THEN;
		bResult				:= TRUE;
		GVL.fbCommand.Operation (bIN := GVL.fbCommand.CyklTestu ());
	ELSE
		bResult				:= FALSE;
	END_IF
	AssertTrue (Condition := GVL.fbCommand.GetFirstCycle (),Message := 'T03a - Bledny stan pierwszego przejscia');
	AssertFalse (Condition := GVL.fbCommand.GetLastCycle (),Message := 'T03b - Bledny stan ostatniego przejscia');
	AssertFalse (Condition := bResult, 						Message := 'T03c - Bledny wynik');
	
	IF (GVL.fbCommand.OperationExecute ()) THEN;
		bResult				:= TRUE;
		GVL.fbCommand.Operation (bIN := GVL.fbCommand.CyklTestu ());
	ELSE
		bResult				:= FALSE;
	END_IF
	AssertFalse (Condition := GVL.fbCommand.GetFirstCycle (),	Message := 'T04a - Bledny stan pierwszego przejscia');
	AssertFalse (Condition := GVL.fbCommand.GetLastCycle (),	Message := 'T04b - Bledny stan ostatniego przejscia');
	AssertTrue (Condition := bResult, 							Message := 'T04c - Bledny wynik');
	
	WRITE_PROTECTED_BOOL (Ptr := ADR (GVL.fbCommand.bFinish), Value := TRUE);
	IF (GVL.fbCommand.OperationExecute ()) THEN;
		bResult				:= TRUE;
		GVL.fbCommand.Operation (bIN := GVL.fbCommand.CyklTestu ());
	ELSE
		bResult				:= FALSE;
	END_IF
	AssertFalse (Condition := GVL.fbCommand.GetFirstCycle (),	Message := 'T05a - Bledny stan pierwszego przejscia');
	Asserttrue (Condition := GVL.fbCommand.GetLastCycle (),		Message := 'T05b - Bledny stan ostatniego przejscia');
	AssertTrue (Condition := bResult, 							Message := 'T05c - Bledny wynik');
	
	IF (GVL.fbCommand.OperationExecute ()) THEN;
		bResult				:= TRUE;
		GVL.fbCommand.Operation (bIN := GVL.fbCommand.CyklTestu ());
	ELSE
		bResult				:= FALSE;
	END_IF
	AssertFalse (Condition := GVL.fbCommand.GetFirstCycle (),	Message := 'T06a - Bledny stan pierwszego przejscia');
	AssertFalse (Condition := GVL.fbCommand.GetLastCycle (),	Message := 'T06b - Bledny stan ostatniego przejscia');
	AssertFalse (Condition := bResult, 							Message := 'T06c - Bledny wynik');

	

	TcUnit.TEST_FINISHED ();
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>